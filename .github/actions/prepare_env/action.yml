name: 'Swift Java CI Env'
description: 'Prepare the CI environment by installing Swift and selected JDK etc.'

runs:
  using: composite
  steps:
    - name: Install System Dependencies
      if: matrix.os_version == 'jammy'
      run: apt-get -qq update && apt-get -qq install -y make curl wget libjemalloc2 libjemalloc-dev
      shell: bash
    - name: Set up JDK ${{ matrix.jdk_version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.jdk_version }}
        distribution: ${{ matrix.jdk_vendor }}
        cache: 'gradle'
    - name: Cache JDKs
      id: cache-jdk
      if: matrix.os_version == 'jammy'
      uses: actions/cache@v4
      continue-on-error: true
      with:
        path: /usr/lib/jvm/
        key: ${{ runner.os }}-jdk-${{ matrix.jdk_vendor }}-${{ hashFiles('/usr/lib/jvm/*') }}
        restore-keys: |
          ${{ runner.os }}-jdk-
    - name: Install JDK
      if: steps.cache-jdk.outputs.cache-hit != 'true' && matrix.os_version == 'jammy'
      run: "bash -xc 'JDK_VENDOR=${{ matrix.jdk_vendor }} ./docker/install_jdk.sh'"
      shell: bash
    - name: Cache local Gradle repository
      uses: actions/cache@v4
      continue-on-error: true
      with:
        path: |
          /root/.gradle/caches
          /root/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('*/*.gradle*', 'settings.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Cache local SwiftPM repository
      if: matrix.os_version == 'jammy'
      uses: actions/cache@v4
      continue-on-error: true
      with:
        path: /__w/swift-java/swift-java/.build/checkouts
        key: ${{ runner.os }}-swiftpm-cache-${{ hashFiles('Package.swift') }}
        restore-keys: |
          ${{ runner.os }}-swiftpm-cache
          ${{ runner.os }}-swiftpm-
