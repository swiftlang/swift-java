// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.util.TreeMap")
open class TreeMap<K: AnyJavaObject, V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func remove(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open func get(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func put(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open func values() -> JavaCollection<JavaObject>!

  @JavaMethod
  open override func clone() -> JavaObject!

  @JavaMethod
  open func clear()

  @JavaMethod
  open func replace(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?) -> Bool

  @JavaMethod
  open func replace(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open func putIfAbsent(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open func containsKey(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func keySet() -> JavaSet<JavaObject>!

  @JavaMethod
  open func containsValue(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func firstKey() -> JavaObject!

  @JavaMethod
  open func putFirst(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open func putLast(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open func lowerKey(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func floorKey(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func ceilingKey(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func higherKey(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func lastKey() -> JavaObject!
}
extension TreeMap {
  @JavaClass("java.util.AbstractMap$SimpleEntry")
  open class SimpleEntry<K: AnyJavaObject, V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, _ arg1: JavaObject?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getValue() -> JavaObject!

  @JavaMethod
  open func getKey() -> JavaObject!

  @JavaMethod
  open func setValue(_ arg0: JavaObject?) -> JavaObject!
  }
}
extension TreeMap {
  @JavaClass("java.util.AbstractMap$SimpleImmutableEntry")
  open class SimpleImmutableEntry<K: AnyJavaObject, V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, _ arg1: JavaObject?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getValue() -> JavaObject!

  @JavaMethod
  open func getKey() -> JavaObject!

  @JavaMethod
  open func setValue(_ arg0: JavaObject?) -> JavaObject!
  }
}
