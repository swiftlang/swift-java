// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.util.ArrayDeque")
open class ArrayDeque<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaCollection<JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func remove() -> JavaObject!

  @JavaMethod
  open func remove(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open override func clone() -> ArrayDeque<JavaObject>!

  @JavaMethod
  open func clear()

  @JavaMethod
  open func isEmpty() -> Bool

  @JavaMethod
  open func add(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func toArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaMethod
  open func toArray() -> [JavaObject?]

  @JavaMethod
  open func iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  open func contains(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func addAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func peek() -> JavaObject!

  @JavaMethod
  open func getFirst() -> JavaObject!

  @JavaMethod
  open func getLast() -> JavaObject!

  @JavaMethod
  open func element() -> JavaObject!

  @JavaMethod
  open func addFirst(_ arg0: JavaObject?)

  @JavaMethod
  open func addLast(_ arg0: JavaObject?)

  @JavaMethod
  open func removeFirst() -> JavaObject!

  @JavaMethod
  open func removeLast() -> JavaObject!

  @JavaMethod
  open func removeAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func retainAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func poll() -> JavaObject!

  @JavaMethod
  open func push(_ arg0: JavaObject?)

  @JavaMethod
  open func pop() -> JavaObject!

  @JavaMethod
  open func pollFirst() -> JavaObject!

  @JavaMethod
  open func pollLast() -> JavaObject!

  @JavaMethod
  open func offerLast(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func peekFirst() -> JavaObject!

  @JavaMethod
  open func removeFirstOccurrence(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func offerFirst(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func peekLast() -> JavaObject!

  @JavaMethod
  open func removeLastOccurrence(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func offer(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func descendingIterator() -> JavaIterator<JavaObject>!
}
