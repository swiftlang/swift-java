// Auto-generated by Java-to-Swift wrapper generator.
import SwiftJava
import CJNI

@JavaClass("java.nio.charset.Charset")
open class Charset: JavaObject {
  @JavaMethod
  open func name() -> String

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func compareTo(_ arg0: Charset?) -> Int32

  @JavaMethod
  open func canEncode() -> Bool

  @JavaMethod
  open func contains(_ arg0: Charset?) -> Bool

  @JavaMethod
  open func isRegistered() -> Bool

  @JavaMethod
  open func displayName() -> String
}
extension JavaClass<Charset> {
  @JavaStaticMethod
  public func forName(_ arg0: String, _ arg1: Charset?) -> Charset!

  @JavaStaticMethod
  public func forName(_ arg0: String) -> Charset!

  @JavaStaticMethod
  public func defaultCharset() -> Charset!

  @JavaStaticMethod
  public func isSupported(_ arg0: String) -> Bool
}
