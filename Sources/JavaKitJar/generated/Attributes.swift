// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.util.jar.Attributes")
public struct Attributes {
  @JavaMethod
  public init(_ arg0: Attributes?, environment: JNIEnvironment? = nil)

  @JavaMethod
  public init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  public init(environment: JNIEnvironment? = nil)

  @JavaMethod
  public func remove(_ arg0: JavaObject?) -> JavaObject?

  @JavaMethod
  public func size() -> Int32

  @JavaMethod
  public func get(_ arg0: JavaObject?) -> JavaObject?

  @JavaMethod
  public func put(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject?

  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func values() -> JavaCollection<JavaObject>?

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func clone() -> JavaObject?

  @JavaMethod
  public func clear()

  @JavaMethod
  public func getValue(_ arg0: String) -> String

  @JavaMethod
  public func getValue(_ arg0: Attributes.Name?) -> String

  @JavaMethod
  public func isEmpty() -> Bool

  @JavaMethod
  public func containsKey(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func keySet() -> JavaSet<JavaObject>?

  @JavaMethod
  public func containsValue(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func putValue(_ arg0: String, _ arg1: String) -> String

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func getClass() -> JavaClass<JavaObject>?

  @JavaMethod
  public func notify()

  @JavaMethod
  public func notifyAll()

  @JavaMethod
  public func wait(_ arg0: Int64) throws

  @JavaMethod
  public func wait(_ arg0: Int64, _ arg1: Int32) throws

  @JavaMethod
  public func wait() throws

  @JavaMethod
  public func remove(_ arg0: JavaObject?, _ arg1: JavaObject?) -> Bool

  @JavaMethod
  public func replace(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?) -> Bool

  @JavaMethod
  public func replace(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject?

  @JavaMethod
  public func putIfAbsent(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject?

  @JavaMethod
  public func getOrDefault(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject?
}
extension Attributes {
  @JavaClass("java.util.jar.Attributes$Name")
  public struct Name {
  @JavaMethod
  public init(_ arg0: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func getClass() -> JavaClass<JavaObject>?

  @JavaMethod
  public func notify()

  @JavaMethod
  public func notifyAll()

  @JavaMethod
  public func wait(_ arg0: Int64) throws

  @JavaMethod
  public func wait(_ arg0: Int64, _ arg1: Int32) throws

  @JavaMethod
  public func wait() throws
  }
}
extension JavaClass<Attributes.Name> {
  @JavaStaticField(isFinal: true)
  public var MANIFEST_VERSION: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var SIGNATURE_VERSION: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var CONTENT_TYPE: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var CLASS_PATH: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var MAIN_CLASS: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var SEALED: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var EXTENSION_LIST: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var EXTENSION_NAME: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var EXTENSION_INSTALLATION: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var IMPLEMENTATION_TITLE: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var IMPLEMENTATION_VERSION: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var IMPLEMENTATION_VENDOR: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var IMPLEMENTATION_VENDOR_ID: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var IMPLEMENTATION_URL: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var SPECIFICATION_TITLE: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var SPECIFICATION_VERSION: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var SPECIFICATION_VENDOR: Attributes.Name?

  @JavaStaticField(isFinal: true)
  public var MULTI_RELEASE: Attributes.Name?
}
