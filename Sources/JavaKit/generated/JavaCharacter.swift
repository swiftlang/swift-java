// Auto-generated by Java-to-Swift wrapper generator.
import JavaRuntime

@JavaClass("java.lang.Character")
public struct JavaCharacter {
  @JavaMethod
  public init(_ arg0: UInt16, environment: JNIEnvironment? = nil)

  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func compareTo(_ arg0: JavaCharacter?) -> Int32

  @JavaMethod
  public func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  public func charValue() -> UInt16

  @JavaMethod
  public func getClass() -> JavaClass<JavaObject>?

  @JavaMethod
  public func notify()

  @JavaMethod
  public func notifyAll()

  @JavaMethod
  public func wait(_ arg0: Int64) throws

  @JavaMethod
  public func wait(_ arg0: Int64, _ arg1: Int32) throws

  @JavaMethod
  public func wait() throws
}
extension JavaClass<JavaCharacter> {
  @JavaStaticField
  public var MIN_RADIX: Int32

  @JavaStaticField
  public var MAX_RADIX: Int32

  @JavaStaticField
  public var MIN_VALUE: UInt16

  @JavaStaticField
  public var MAX_VALUE: UInt16

  @JavaStaticField
  public var TYPE: JavaClass<JavaCharacter>?

  @JavaStaticField
  public var UNASSIGNED: Int8

  @JavaStaticField
  public var UPPERCASE_LETTER: Int8

  @JavaStaticField
  public var LOWERCASE_LETTER: Int8

  @JavaStaticField
  public var TITLECASE_LETTER: Int8

  @JavaStaticField
  public var MODIFIER_LETTER: Int8

  @JavaStaticField
  public var OTHER_LETTER: Int8

  @JavaStaticField
  public var NON_SPACING_MARK: Int8

  @JavaStaticField
  public var ENCLOSING_MARK: Int8

  @JavaStaticField
  public var COMBINING_SPACING_MARK: Int8

  @JavaStaticField
  public var DECIMAL_DIGIT_NUMBER: Int8

  @JavaStaticField
  public var LETTER_NUMBER: Int8

  @JavaStaticField
  public var OTHER_NUMBER: Int8

  @JavaStaticField
  public var SPACE_SEPARATOR: Int8

  @JavaStaticField
  public var LINE_SEPARATOR: Int8

  @JavaStaticField
  public var PARAGRAPH_SEPARATOR: Int8

  @JavaStaticField
  public var CONTROL: Int8

  @JavaStaticField
  public var FORMAT: Int8

  @JavaStaticField
  public var PRIVATE_USE: Int8

  @JavaStaticField
  public var SURROGATE: Int8

  @JavaStaticField
  public var DASH_PUNCTUATION: Int8

  @JavaStaticField
  public var START_PUNCTUATION: Int8

  @JavaStaticField
  public var END_PUNCTUATION: Int8

  @JavaStaticField
  public var CONNECTOR_PUNCTUATION: Int8

  @JavaStaticField
  public var OTHER_PUNCTUATION: Int8

  @JavaStaticField
  public var MATH_SYMBOL: Int8

  @JavaStaticField
  public var CURRENCY_SYMBOL: Int8

  @JavaStaticField
  public var MODIFIER_SYMBOL: Int8

  @JavaStaticField
  public var OTHER_SYMBOL: Int8

  @JavaStaticField
  public var INITIAL_QUOTE_PUNCTUATION: Int8

  @JavaStaticField
  public var FINAL_QUOTE_PUNCTUATION: Int8

  @JavaStaticField
  public var DIRECTIONALITY_UNDEFINED: Int8

  @JavaStaticField
  public var DIRECTIONALITY_LEFT_TO_RIGHT: Int8

  @JavaStaticField
  public var DIRECTIONALITY_RIGHT_TO_LEFT: Int8

  @JavaStaticField
  public var DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC: Int8

  @JavaStaticField
  public var DIRECTIONALITY_EUROPEAN_NUMBER: Int8

  @JavaStaticField
  public var DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR: Int8

  @JavaStaticField
  public var DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR: Int8

  @JavaStaticField
  public var DIRECTIONALITY_ARABIC_NUMBER: Int8

  @JavaStaticField
  public var DIRECTIONALITY_COMMON_NUMBER_SEPARATOR: Int8

  @JavaStaticField
  public var DIRECTIONALITY_NONSPACING_MARK: Int8

  @JavaStaticField
  public var DIRECTIONALITY_BOUNDARY_NEUTRAL: Int8

  @JavaStaticField
  public var DIRECTIONALITY_PARAGRAPH_SEPARATOR: Int8

  @JavaStaticField
  public var DIRECTIONALITY_SEGMENT_SEPARATOR: Int8

  @JavaStaticField
  public var DIRECTIONALITY_WHITESPACE: Int8

  @JavaStaticField
  public var DIRECTIONALITY_OTHER_NEUTRALS: Int8

  @JavaStaticField
  public var DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING: Int8

  @JavaStaticField
  public var DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE: Int8

  @JavaStaticField
  public var DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING: Int8

  @JavaStaticField
  public var DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE: Int8

  @JavaStaticField
  public var DIRECTIONALITY_POP_DIRECTIONAL_FORMAT: Int8

  @JavaStaticField
  public var DIRECTIONALITY_LEFT_TO_RIGHT_ISOLATE: Int8

  @JavaStaticField
  public var DIRECTIONALITY_RIGHT_TO_LEFT_ISOLATE: Int8

  @JavaStaticField
  public var DIRECTIONALITY_FIRST_STRONG_ISOLATE: Int8

  @JavaStaticField
  public var DIRECTIONALITY_POP_DIRECTIONAL_ISOLATE: Int8

  @JavaStaticField
  public var MIN_HIGH_SURROGATE: UInt16

  @JavaStaticField
  public var MAX_HIGH_SURROGATE: UInt16

  @JavaStaticField
  public var MIN_LOW_SURROGATE: UInt16

  @JavaStaticField
  public var MAX_LOW_SURROGATE: UInt16

  @JavaStaticField
  public var MIN_SURROGATE: UInt16

  @JavaStaticField
  public var MAX_SURROGATE: UInt16

  @JavaStaticField
  public var MIN_SUPPLEMENTARY_CODE_POINT: Int32

  @JavaStaticField
  public var MIN_CODE_POINT: Int32

  @JavaStaticField
  public var MAX_CODE_POINT: Int32

  @JavaStaticField
  public var SIZE: Int32

  @JavaStaticField
  public var BYTES: Int32

  @JavaStaticMethod
  public func getName(_ arg0: Int32) -> String

  @JavaStaticMethod
  public func isJavaIdentifierStart(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isJavaIdentifierStart(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isJavaIdentifierPart(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isJavaIdentifierPart(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func toString(_ arg0: Int32) -> String

  @JavaStaticMethod
  public func toString(_ arg0: UInt16) -> String

  @JavaStaticMethod
  public func hashCode(_ arg0: UInt16) -> Int32

  @JavaStaticMethod
  public func reverseBytes(_ arg0: UInt16) -> UInt16

  @JavaStaticMethod
  public func isDigit(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isDigit(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isLowerCase(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isLowerCase(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isUpperCase(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isUpperCase(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isWhitespace(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isWhitespace(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func compare(_ arg0: UInt16, _ arg1: UInt16) -> Int32

  @JavaStaticMethod
  public func valueOf(_ arg0: UInt16) -> JavaCharacter?

  @JavaStaticMethod
  public func toChars(_ arg0: Int32) -> [UInt16]

  @JavaStaticMethod
  public func toChars(_ arg0: Int32, _ arg1: [UInt16], _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public func isHighSurrogate(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isLowSurrogate(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isSurrogate(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isSupplementaryCodePoint(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func highSurrogate(_ arg0: Int32) -> UInt16

  @JavaStaticMethod
  public func lowSurrogate(_ arg0: Int32) -> UInt16

  @JavaStaticMethod
  public func toCodePoint(_ arg0: UInt16, _ arg1: UInt16) -> Int32

  @JavaStaticMethod
  public func codePointAt(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public func codePointAt(_ arg0: [UInt16], _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func codePointBefore(_ arg0: [UInt16], _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func codePointBefore(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public func codePointCount(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public func offsetByCodePoints(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> Int32

  @JavaStaticMethod
  public func toLowerCase(_ arg0: UInt16) -> UInt16

  @JavaStaticMethod
  public func toLowerCase(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func toUpperCase(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func toUpperCase(_ arg0: UInt16) -> UInt16

  @JavaStaticMethod
  public func isBmpCodePoint(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func getType(_ arg0: UInt16) -> Int32

  @JavaStaticMethod
  public func getType(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func isLetter(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isLetter(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isLetterOrDigit(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isLetterOrDigit(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isValidCodePoint(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isTitleCase(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isTitleCase(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isDefined(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isDefined(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isIdeographic(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isUnicodeIdentifierStart(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isUnicodeIdentifierStart(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isUnicodeIdentifierPart(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isUnicodeIdentifierPart(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isIdentifierIgnorable(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isIdentifierIgnorable(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isEmoji(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isEmojiPresentation(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isEmojiModifier(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isEmojiModifierBase(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isEmojiComponent(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isExtendedPictographic(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func toTitleCase(_ arg0: UInt16) -> UInt16

  @JavaStaticMethod
  public func toTitleCase(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func digit(_ arg0: UInt16, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func digit(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func getNumericValue(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func getNumericValue(_ arg0: UInt16) -> Int32

  @JavaStaticMethod
  public func isSpaceChar(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isSpaceChar(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isISOControl(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isISOControl(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func getDirectionality(_ arg0: UInt16) -> Int8

  @JavaStaticMethod
  public func getDirectionality(_ arg0: Int32) -> Int8

  @JavaStaticMethod
  public func isMirrored(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isMirrored(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isSurrogatePair(_ arg0: UInt16, _ arg1: UInt16) -> Bool

  @JavaStaticMethod
  public func charCount(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public func isJavaLetter(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isJavaLetterOrDigit(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func isAlphabetic(_ arg0: Int32) -> Bool

  @JavaStaticMethod
  public func isSpace(_ arg0: UInt16) -> Bool

  @JavaStaticMethod
  public func forDigit(_ arg0: Int32, _ arg1: Int32) -> UInt16

  @JavaStaticMethod
  public func codePointOf(_ arg0: String) -> Int32
}
