// Auto-generated by Java-to-Swift wrapper generator.
import JavaRuntime

@JavaClass("java.lang.Long")
open class JavaLong: JavaNumber {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int64, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func compareTo(_ arg0: JavaLong?) -> Int32

  @JavaMethod
  open override func byteValue() -> Int8

  @JavaMethod
  open override func shortValue() -> Int16

  @JavaMethod
  open override func intValue() -> Int32

  @JavaMethod
  open override func longValue() -> Int64

  @JavaMethod
  open override func floatValue() -> Float

  @JavaMethod
  open override func doubleValue() -> Double
}
extension JavaClass<JavaLong> {
  @JavaStaticField(isFinal: true)
  public var MIN_VALUE: Int64

  @JavaStaticField(isFinal: true)
  public var MAX_VALUE: Int64

  @JavaStaticField(isFinal: true)
  public var TYPE: JavaClass<JavaLong>!

  @JavaStaticField(isFinal: true)
  public var SIZE: Int32

  @JavaStaticField(isFinal: true)
  public var BYTES: Int32

  @JavaStaticMethod
  public func numberOfLeadingZeros(_ arg0: Int64) -> Int32

  @JavaStaticMethod
  public func numberOfTrailingZeros(_ arg0: Int64) -> Int32

  @JavaStaticMethod
  public func bitCount(_ arg0: Int64) -> Int32

  @JavaStaticMethod
  public func toString(_ arg0: Int64) -> String

  @JavaStaticMethod
  public func toString(_ arg0: Int64, _ arg1: Int32) -> String

  @JavaStaticMethod
  public func hashCode(_ arg0: Int64) -> Int32

  @JavaStaticMethod
  public func min(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func max(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func signum(_ arg0: Int64) -> Int32

  @JavaStaticMethod
  public func expand(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func compareUnsigned(_ arg0: Int64, _ arg1: Int64) -> Int32

  @JavaStaticMethod
  public func divideUnsigned(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func remainderUnsigned(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func reverse(_ arg0: Int64) -> Int64

  @JavaStaticMethod
  public func reverseBytes(_ arg0: Int64) -> Int64

  @JavaStaticMethod
  public func compress(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func getLong(_ arg0: String, _ arg1: JavaLong?) -> JavaLong!

  @JavaStaticMethod
  public func getLong(_ arg0: String) -> JavaLong!

  @JavaStaticMethod
  public func getLong(_ arg0: String, _ arg1: Int64) -> JavaLong!

  @JavaStaticMethod
  public func compare(_ arg0: Int64, _ arg1: Int64) -> Int32

  @JavaStaticMethod
  public func valueOf(_ arg0: String) throws -> JavaLong!

  @JavaStaticMethod
  public func valueOf(_ arg0: Int64) -> JavaLong!

  @JavaStaticMethod
  public func valueOf(_ arg0: String, _ arg1: Int32) throws -> JavaLong!

  @JavaStaticMethod
  public func toHexString(_ arg0: Int64) -> String

  @JavaStaticMethod
  public func decode(_ arg0: String) throws -> JavaLong!

  @JavaStaticMethod
  public func sum(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func toUnsignedString(_ arg0: Int64) -> String

  @JavaStaticMethod
  public func toUnsignedString(_ arg0: Int64, _ arg1: Int32) -> String

  @JavaStaticMethod
  public func toOctalString(_ arg0: Int64) -> String

  @JavaStaticMethod
  public func toBinaryString(_ arg0: Int64) -> String

  @JavaStaticMethod
  public func highestOneBit(_ arg0: Int64) -> Int64

  @JavaStaticMethod
  public func lowestOneBit(_ arg0: Int64) -> Int64

  @JavaStaticMethod
  public func rotateLeft(_ arg0: Int64, _ arg1: Int32) -> Int64

  @JavaStaticMethod
  public func rotateRight(_ arg0: Int64, _ arg1: Int32) -> Int64

  @JavaStaticMethod
  public func parseLong(_ arg0: String, _ arg1: Int32) throws -> Int64

  @JavaStaticMethod
  public func parseLong(_ arg0: String) throws -> Int64

  @JavaStaticMethod
  public func parseUnsignedLong(_ arg0: String, _ arg1: Int32) throws -> Int64

  @JavaStaticMethod
  public func parseUnsignedLong(_ arg0: String) throws -> Int64
}
