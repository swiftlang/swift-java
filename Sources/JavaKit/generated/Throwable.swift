// Auto-generated by Java-to-Swift wrapper generator.
import JavaRuntime

@JavaClass("java.lang.Throwable")
open class Throwable: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Throwable?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Throwable?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func printStackTrace()

  @JavaMethod
  open func fillInStackTrace() -> Throwable!

  @JavaMethod
  open func getCause() -> Throwable!

  @JavaMethod
  open func initCause(_ arg0: Throwable?) -> Throwable!

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func getMessage() -> String

  @JavaMethod
  open func getSuppressed() -> [Throwable?]

  @JavaMethod
  open func getLocalizedMessage() -> String

  @JavaMethod
  open func addSuppressed(_ arg0: Throwable?)
}
