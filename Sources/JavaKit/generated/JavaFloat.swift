// Auto-generated by Java-to-Swift wrapper generator.
import JavaRuntime

@JavaClass("java.lang.Float", extends: JavaNumber.self)
public struct JavaFloat {
  @JavaMethod
  public init(_ arg0: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  public init(_ arg0: Double, environment: JNIEnvironment? = nil)

  @JavaMethod
  public init(_ arg0: Float, environment: JNIEnvironment? = nil)

  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func isInfinite() -> Bool

  @JavaMethod
  public func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  public func compareTo(_ arg0: JavaFloat?) -> Int32

  @JavaMethod
  public func byteValue() -> Int8

  @JavaMethod
  public func shortValue() -> Int16

  @JavaMethod
  public func intValue() -> Int32

  @JavaMethod
  public func longValue() -> Int64

  @JavaMethod
  public func floatValue() -> Float

  @JavaMethod
  public func doubleValue() -> Double

  @JavaMethod
  public func isNaN() -> Bool

  @JavaMethod
  public func getClass() -> JavaClass<JavaObject>?

  @JavaMethod
  public func notify()

  @JavaMethod
  public func notifyAll()

  @JavaMethod
  public func wait(_ arg0: Int64) throws

  @JavaMethod
  public func wait(_ arg0: Int64, _ arg1: Int32) throws

  @JavaMethod
  public func wait() throws
}
extension JavaClass<JavaFloat> {
  @JavaStaticField
  public var POSITIVE_INFINITY: Float

  @JavaStaticField
  public var NEGATIVE_INFINITY: Float

  @JavaStaticField
  public var NaN: Float

  @JavaStaticField
  public var MAX_VALUE: Float

  @JavaStaticField
  public var MIN_NORMAL: Float

  @JavaStaticField
  public var MIN_VALUE: Float

  @JavaStaticField
  public var SIZE: Int32

  @JavaStaticField
  public var PRECISION: Int32

  @JavaStaticField
  public var MAX_EXPONENT: Int32

  @JavaStaticField
  public var MIN_EXPONENT: Int32

  @JavaStaticField
  public var BYTES: Int32

  @JavaStaticField
  public var TYPE: JavaClass<JavaFloat>?

  @JavaStaticMethod
  public func toString(_ arg0: Float) -> String

  @JavaStaticMethod
  public func hashCode(_ arg0: Float) -> Int32

  @JavaStaticMethod
  public func min(_ arg0: Float, _ arg1: Float) -> Float

  @JavaStaticMethod
  public func max(_ arg0: Float, _ arg1: Float) -> Float

  @JavaStaticMethod
  public func isInfinite(_ arg0: Float) -> Bool

  @JavaStaticMethod
  public func isFinite(_ arg0: Float) -> Bool

  @JavaStaticMethod
  public func floatToRawIntBits(_ arg0: Float) -> Int32

  @JavaStaticMethod
  public func floatToIntBits(_ arg0: Float) -> Int32

  @JavaStaticMethod
  public func intBitsToFloat(_ arg0: Int32) -> Float

  @JavaStaticMethod
  public func float16ToFloat(_ arg0: Int16) -> Float

  @JavaStaticMethod
  public func floatToFloat16(_ arg0: Float) -> Int16

  @JavaStaticMethod
  public func compare(_ arg0: Float, _ arg1: Float) -> Int32

  @JavaStaticMethod
  public func valueOf(_ arg0: Float) -> JavaFloat?

  @JavaStaticMethod
  public func valueOf(_ arg0: String) throws -> JavaFloat?

  @JavaStaticMethod
  public func toHexString(_ arg0: Float) -> String

  @JavaStaticMethod
  public func isNaN(_ arg0: Float) -> Bool

  @JavaStaticMethod
  public func sum(_ arg0: Float, _ arg1: Float) -> Float

  @JavaStaticMethod
  public func parseFloat(_ arg0: String) throws -> Float
}
