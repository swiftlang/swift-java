// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("java.net.URL")
open class URL: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: URL?, _ arg1: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, _ arg2: Int32, _ arg3: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, _ arg2: String, environment: JNIEnvironment? = nil) throws

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getHost() -> String

  @JavaMethod
  open func getPort() -> Int32

  @JavaMethod
  open func getDefaultPort() -> Int32

  @JavaMethod
  open func sameFile(_ arg0: URL?) -> Bool

  @JavaMethod
  open func toExternalForm() -> String

  @JavaMethod
  open func getContent() throws -> JavaObject!

  @JavaMethod
  open func getContent(_ arg0: [JavaClass<JavaObject>?]) throws -> JavaObject!

  @JavaMethod
  open func getProtocol() -> String

  @JavaMethod
  open func getAuthority() -> String

  @JavaMethod
  open func getFile() -> String

  @JavaMethod
  open func getRef() -> String

  @JavaMethod
  open func getQuery() -> String

  @JavaMethod
  open func getPath() -> String

  @JavaMethod
  open func getUserInfo() -> String

  @JavaMethod
  open func toURI() throws -> URI!
}
