// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.net.URLClassLoader")
open class URLClassLoader: JavaClassLoader {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: [URL?], _ arg2: JavaClassLoader?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: [URL?], _ arg1: JavaClassLoader?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: [URL?], environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func findResource(_ arg0: String) -> URL!

  @JavaMethod
  open override func findClass(_ arg0: String) throws -> JavaClass<JavaObject>!

  @JavaMethod
  open override func findResources(_ arg0: String) throws -> Enumeration<URL>!

  @JavaMethod
  open func close() throws

  @JavaMethod
  open func addURL(_ arg0: URL?)

  @JavaMethod
  open func getURLs() -> [URL?]
}
extension JavaClass<URLClassLoader> {
  @JavaStaticMethod
  public func newInstance(_ arg0: [URL?], _ arg1: JavaClassLoader?) -> URLClassLoader!

  @JavaStaticMethod
  public func newInstance(_ arg0: [URL?]) -> URLClassLoader!
}
